<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codepig.spy.mapper.UserMapper">

    <!-- 配置 查询结果的列名和实体类的属性名的对应关系 -->
    <resultMap id="userMap" type="com.codepig.spy.model.User">
        <!-- 主键的对应 -->
        <id property="userId" column="id"></id>
        <result property="userName" column="userName"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>

    <sql id="userColumn">
        Id,userName,Address,Sex,Birthday
    </sql>

    <!--查询所有-->
    <select id="findAll" resultMap="userMap">
        select <include refid="userColumn"></include> from user;
    </select>

    <insert id="insertUser" parameterType="com.codepig.spy.model.User">
        <!--配置插入操作后，获取插入数据的id-->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>

        insert into user (userName,address,sex,birthday) values (#{userName},#{userAddress},#{sex},#{birthday});
    </insert>

    <!--更新用戶-->
    <update id="updateUser" parameterType="com.codepig.spy.model.User">
        update user set userName = #{userName}, address = #{userAddress}, sex = #{userSex}, birthday = #{userBirthday} where id = #{id};
    </update>

    <!--删除用户-->
    <delete id="deleteUser" parameterType="Integer">
        delete from user where id = #{uid};
    </delete>

    <!--查询一个用户-->
    <select id="findById" parameterType="Integer" resultType="com.codepig.spy.model.User">
        select * from user where id = #{uid};
    </select>

    <!--模糊查询用户-->
    <select id="findByName" parameterType="String" resultType="com.codepig.spy.model.User">
        select * from user where userName = #{name};
    </select>

    <!--根据queryVo的条件查询用户-->
    <select id="findUserByVo" parameterType="com.codepig.spy.model.QueryVo" resultType="com.codepig.spy.model.User">
        select * from user where userName like #{user.userName};
    </select>

    <select id="findUserByCondition" resultMap="userMap" parameterType="user">
        select * from user
        <where>
            <if test="userName != null ">
                and userName = #{userName}
            </if>
            <if test="userSex != null">
                and Sex = #{userSex};
            </if>
        </where>
    </select>

    <select id="findUserInIds" parameterType="queryVo" resultMap="userMap">
        select * from user
        <where>
            <if test="ids != null and ids.size() > 0">
                <foreach collection="ids" open="and id in (" close=")" item="uid" separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>
</mapper>